------------------------------------------------------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  C:\Users\Achim.Ahrens\Dropbox\statalasso\Lassopack_MC\out09\mc_log_2.log
  log type:  text
 opened on:   4 Oct 2018, 15:49:48

. 
. cd
C:\Users\Achim.Ahrens\Dropbox\statalasso\Lassopack_MC

. 
. which lasso2
c:\ado\plus\l\lasso2.ado
*! lasso2 1.0.06 4sep2018
*! authors aa/ms

. which cvlasso
c:\ado\plus\c\cvlasso.ado
*! lassocv 1.0.06 22apr2018
*! authors aa/ms

. which rlasso
c:\ado\plus\r\rlasso.ado
*! rlasso 1.0.07 29aug2018
*! authors aa/cbh/ms

. which lassoutils
c:\ado\plus\l\lassoutils.ado
*! lassoutils 1.0.14 5sep2018
*! authors aa/cbh/ms

. 
. set seed 999 // the number of the beast

. 
. * program to calculate L1 error
. cap program drop comparevec

. program define comparevec , rclass
  1.         syntax ,  TRUEMATname(string) ESTMATname(string) 
  2.         
.         tempname truemat estmat 
  3.         mat `truemat'   = `truematname'
  4.         mat `estmat'    = `estmatname'
  5. 
.         // compare dim
.         local ptrue = colsof(`truemat')
  6.         local pest  = colsof(`estmat')
  7.         assert `ptrue'==`pest'
  8.         
.         // don't include constant in L1-norm 
.         // constant is always in last column of estimated beta and true beta
.         local pcheck = `pest' - 1
  9. 
.         
.         local l1norm = 0
 10.         forvalues i = 1(1)`pcheck' {
 11.                 local l1norm = `l1norm' + abs(el(`truemat',1,`i')-el(`estmat',1,`i'))
 12.         }
 13.         return scalar l1norm = `l1norm' // l1 norm
 14.         
. end

. 
. * program to calculate rmse
. cap program drop getrmse

. program define getrmse , rclass
  1.         syntax varlist(min=2 max=2) , ///
>                         esample(varlist min=1 max=1) // estimation smpl
  2.         
.         local xb                : word 1 of `varlist'
  3.         local xbhat     : word 2 of `varlist'
  4.         
.         // calculate in-sample rmse
.         tempvar pe 
  5.         gen double `pe' = (`xb'-`xbhat')^2 if `esample'==1
  6.         sum `pe', meanonly
  7.         local rmse = sqrt(r(mean))
  8.         
.         // calculate out-of-sample rmse
.         tempvar pe_oos
  9.         gen double `pe_oos' = (`xb'-`xbhat')^2 if `esample'==0
 10.         sum `pe_oos', meanonly
 11.         local rmse_oos = sqrt(r(mean))
 12.         
.         return scalar rmse = `rmse'                      
 13.         return scalar rmse_oos = `rmse_oos'
 14. end

. 
. cap program drop makebAll

. program define makebAll, rclass
  1. 
.         syntax , best(string) allvars(string)
  2.         
.         // number of vars (incl constant)
.         local p : word count `allvars'
  3. 
.         tempname b bAll 
  4.         mat `b' = `best'
  5.         
.         // selected vars
.         local sel : colnames `b'
  6.         
.         // create empty full beta vector
.         mat `bAll' = J(1,`p',0)
  7.         mat colnames `bAll' = `allvars'
  8.         
.         // fill long beta vector
.         foreach i of local sel {
  9.                 //di "`i'"
.                 local bix = colnumb(`b',"`i'")
 10.                 local bAllix = colnumb(`bAll',"`i'")
 11.                 mat `bAll'[1,`bAllix']=`b'[1,`bix']
 12.         }
 13.         //mat list `bAll'
.         
.         // return
.         return matrix bAll = `bAll'
 14.         return local sel `sel'
 15.         //return scalar p = `p'
. end 

. 
end of do-file

. do "C:\Users\ACHIM~1.AHR\AppData\Local\Temp\STD01000000.tmp"

. local design = 1

. local sigma = 1

. local s = 20

. local p = 100

. local obs = 400

. local tobs = 200        

. local theta = .9

. local delta = .9

.         
.         
.                 drop _all

.         
.         set obs `obs'
number of observations (_N) was 0, now 400

.         
.         
.         ** create beta
.         tempname BETA

.         if (`design'==1) {
.                 // sparse beta
.                 mat `BETA' = J(1,`p'+1,0)
.                 forvalues j=1(1)`s' {
  2.                         mat `BETA'[1,`j'] = 1
  3.                 }
.                 *
.                 mat `BETA'[1,`p'+1] = 1 // constant
.         }

.         else {
.                 // dense beta
.                 // with beta(j)=(delta)^j and delta<1
.                 mat `BETA' = J(1,`p'+1,0)
.                 forvalues j=1(1)`p' {
  2.                         mat `BETA'[1,`j'] = (`delta')^(`j')
  3.                 }
.                 *
.                 mat `BETA'[1,`p'+1] = 1 // constant     
.         }

.         *
.         
.         // correlation matrix
.         // theta controls the degree of correlation in X
.         tempname CORR

.         tempname cvec Cmat

.         mata: `cvec'=J(1,`p',0)

.         mata: for (i=1; i<=`p'; i++) `cvec'[1,i]=(`theta')^(i-1)

.         mata: `Cmat'=Toeplitz((`cvec')',`cvec')

.         mata: st_matrix("`CORR'",`Cmat')        

.         *
.         
.         ************* generate data ************************************************
.         // gen e
.         gen double e = rnormal()*`sigma'

.         // create x
.         drawnorm x1-x`p' , double corr(`CORR')

.         // create xb
.         gen double f = el(`BETA',1,`p'+1) // = the intercept (in last column)

.         forvalues j=1(1)`p' {
  2.                 replace f = f + x`j'*el(`BETA',1,`j')
  3.         }
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)

.         // generate y
.         gen y = f + e 

.         drop e 

.         // estimation and validation sample
.         tempvar esample vsample

.         gen `esample' = 0

.         replace `esample' = 1 if _n <= `tobs'
(200 real changes made)

.         gen `vsample' = 0 

.         replace `vsample' = 1 if _n > `tobs'
(200 real changes made)

.         
. 
.         // oracle estimator
.         reg y x1-x`s' if `esample'

      Source |       SS           df       MS      Number of obs   =       200
-------------+----------------------------------   F(20, 179)      =   2062.05
       Model |  39608.9876        20  1980.44938   Prob > F        =    0.0000
    Residual |  171.916195       179   .96042567   R-squared       =    0.9957
-------------+----------------------------------   Adj R-squared   =    0.9952
       Total |  39780.9038       199  199.904039   Root MSE        =    .98001

------------------------------------------------------------------------------
           y |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
          x1 |   .9992118   .1705861     5.86   0.000     .6625932     1.33583
          x2 |   .9753815   .2327851     4.19   0.000     .5160253    1.434738
          x3 |   1.116803   .2167706     5.15   0.000     .6890486    1.544558
          x4 |   1.076495   .2193086     4.91   0.000     .6437325    1.509258
          x5 |   .6804148   .2217763     3.07   0.002     .2427824    1.118047
          x6 |   1.281465     .21291     6.02   0.000      .861328    1.701601
          x7 |    .668874   .2126574     3.15   0.002     .2492361    1.088512
          x8 |   1.109673   .2129129     5.21   0.000     .6895308    1.529815
          x9 |   1.119835   .2069025     5.41   0.000     .7115536    1.528117
         x10 |   .8661026   .2081059     4.16   0.000      .455446    1.276759
         x11 |   1.014007   .2011914     5.04   0.000     .6169948    1.411019
         x12 |   .7984936   .2280086     3.50   0.001      .348563    1.248424
         x13 |   1.184405    .223101     5.31   0.000     .7441587    1.624652
         x14 |   1.460208   .2264422     6.45   0.000     1.013368    1.907047
         x15 |   .8935312   .2302377     3.88   0.000     .4392019     1.34786
         x16 |   .5954851   .2458741     2.42   0.016     .1103003     1.08067
         x17 |   1.064054    .225337     4.72   0.000     .6193951    1.508712
         x18 |   1.357849   .2172482     6.25   0.000     .9291521    1.786546
         x19 |   .7829362   .2289282     3.42   0.001     .3311909    1.234681
         x20 |   .9049626   .1767646     5.12   0.000      .556152    1.253773
       _cons |   1.170875   .0734639    15.94   0.000     1.025908    1.315842
------------------------------------------------------------------------------

.         tempvar xb_oracle

.         predict double `xb_oracle', xb

.         mat beta_oracle = e(b)

.         // add zeros to create full/large beta vector
.         mat zeros = J(1,`p'-`s',0) 

.         mat beta_oracle = (beta_oracle[1,1..`s'],zeros,beta_oracle[1,`s'+1])

.         local shat_oracle = `s'

.         ds x1-x`s'
x1   x2   x3   x4   x5   x6   x7   x8   x9   x10  x11  x12  x13  x14  x15  x16  x17  x18  x19  x20

.         local sel_oracle = r(varlist)

. 
end of do-file

. do "C:\Users\ACHIM~1.AHR\AppData\Local\Temp\STD01000000.tmp"

. local design = 1

. local sigma = 1

. local s = 20

. local p = 100

. local obs = 400

. local tobs = 200        

. local theta = .9

. local delta = .9

.         
.         
.                 drop _all

.         
.         set obs `obs'
number of observations (_N) was 0, now 400

.         
.         
.         ** create beta
.         tempname BETA

.         if (`design'==1) {
.                 // sparse beta
.                 mat `BETA' = J(1,`p'+1,0)
.                 forvalues j=1(1)`s' {
  2.                         mat `BETA'[1,`j'] = 1
  3.                 }
.                 *
.                 mat `BETA'[1,`p'+1] = 1 // constant
.         }

.         else {
.                 // dense beta
.                 // with beta(j)=(delta)^j and delta<1
.                 mat `BETA' = J(1,`p'+1,0)
.                 forvalues j=1(1)`p' {
  2.                         mat `BETA'[1,`j'] = (`delta')^(`j')
  3.                 }
.                 *
.                 mat `BETA'[1,`p'+1] = 1 // constant     
.         }

.         *
.         
.         // correlation matrix
.         // theta controls the degree of correlation in X
.         tempname CORR

.         tempname cvec Cmat

.         mata: `cvec'=J(1,`p',0)

.         mata: for (i=1; i<=`p'; i++) `cvec'[1,i]=(`theta')^(i-1)

.         mata: `Cmat'=Toeplitz((`cvec')',`cvec')

.         mata: st_matrix("`CORR'",`Cmat')        

.         *
.         
.         ************* generate data ************************************************
.         // gen e
.         gen double e = rnormal()*`sigma'

.         // create x
.         drawnorm x1-x`p' , double corr(`CORR')

.         // create xb
.         gen double f = el(`BETA',1,`p'+1) // = the intercept (in last column)

.         forvalues j=1(1)`p' {
  2.                 replace f = f + x`j'*el(`BETA',1,`j')
  3.         }
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)

.         // generate y
.         gen y = f + e 

.         drop e 

.         // estimation and validation sample
.         tempvar esample vsample

.         gen `esample' = 0

.         replace `esample' = 1 if _n <= `tobs'
(200 real changes made)

.         gen `vsample' = 0 

.         replace `vsample' = 1 if _n > `tobs'
(200 real changes made)

.         
. 
.         // oracle estimator
.         reg y x1-x`s' if `esample'

      Source |       SS           df       MS      Number of obs   =       200
-------------+----------------------------------   F(20, 179)      =   1976.92
       Model |  44215.4491        20  2210.77245   Prob > F        =    0.0000
    Residual |  200.174635       179  1.11829405   R-squared       =    0.9955
-------------+----------------------------------   Adj R-squared   =    0.9950
       Total |  44415.6237       199  223.194089   Root MSE        =    1.0575

------------------------------------------------------------------------------
           y |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
          x1 |   1.211079   .1805361     6.71   0.000      .854826    1.567332
          x2 |   .6841711   .2458247     2.78   0.006     .1990839    1.169258
          x3 |   1.149971   .2429992     4.73   0.000     .6704594    1.629483
          x4 |   .8393071   .2486977     3.37   0.001     .3485505    1.330064
          x5 |   1.418797   .2496989     5.68   0.000     .9260645    1.911529
          x6 |   .5586336   .2471579     2.26   0.025     .0709156    1.046352
          x7 |   1.040644   .2496091     4.17   0.000     .5480887    1.533199
          x8 |   1.097338   .2549799     4.30   0.000     .5941846    1.600491
          x9 |   1.044509    .236011     4.43   0.000     .5787874    1.510231
         x10 |    .792913   .2478011     3.20   0.002     .3039258      1.2819
         x11 |   1.133897   .2477449     4.58   0.000      .645021    1.622774
         x12 |   1.155921   .2684173     4.31   0.000     .6262516     1.68559
         x13 |   .6686371    .252338     2.65   0.009     .1706971    1.166577
         x14 |   .9317264    .238721     3.90   0.000     .4606569    1.402796
         x15 |   1.307334   .2476673     5.28   0.000      .818611    1.796058
         x16 |   .8120068   .2459343     3.30   0.001     .3267034     1.29731
         x17 |   1.049646   .2488679     4.22   0.000      .558554    1.540739
         x18 |   .9252862   .2460596     3.76   0.000     .4397355    1.410837
         x19 |    .898101   .2651872     3.39   0.001     .3748056    1.421396
         x20 |   1.210457   .1845694     6.56   0.000     .8462454    1.574669
       _cons |   .8906138   .0803264    11.09   0.000     .7321054    1.049122
------------------------------------------------------------------------------

.         tempvar xb_oracle

.         predict double xb_oracle, xb

.         mat beta_oracle = e(b)

.         // add zeros to create full/large beta vector
.         mat zeros = J(1,`p'-`s',0) 

.         mat beta_oracle = (beta_oracle[1,1..`s'],zeros,beta_oracle[1,`s'+1])

.         local shat_oracle = `s'

.         ds x1-x`s'
x1   x2   x3   x4   x5   x6   x7   x8   x9   x10  x11  x12  x13  x14  x15  x16  x17  x18  x19  x20

.         local sel_oracle = r(varlist)

.         
. getrmse f xb_oracle, esample(`esample')
(200 missing values generated)
(200 missing values generated)

. 
end of do-file

. ereturn list

scalars:
                  e(N) =  200
               e(df_m) =  20
               e(df_r) =  179
                  e(F) =  1976.91515500954
                 e(r2) =  .9954931481740225
               e(rmse) =  1.057494231450681
                e(mss) =  44215.44908630567
                e(rss) =  200.1746348697125
               e(r2_a) =  .9949895893107847
                 e(ll) =  -283.8749859762953
               e(ll_0) =  -824.0906271996462
               e(rank) =  21

macros:
            e(cmdline) : "regress y x1-x20 if __000004"
              e(title) : "Linear regression"
          e(marginsok) : "XB default"
                e(vce) : "ols"
             e(depvar) : "y"
                e(cmd) : "regress"
         e(properties) : "b V"
            e(predict) : "regres_p"
          e(estat_cmd) : "regress_estat"

matrices:
                  e(b) :  1 x 21
                  e(V) :  21 x 21

functions:
             e(sample)   

. return list

scalars:
           r(rmse_oos) =  .3296607884705508
               r(rmse) =  .2851521344842002

. do "C:\Users\ACHIM~1.AHR\AppData\Local\Temp\STD01000000.tmp"

. local design = 1

. local sigma = 1

. local s = 20

. local p = 100

. local obs = 400

. local tobs = 200        

. local theta = .9

. local delta = .9

.         
.         
.                 drop _all

.         
.         set obs `obs'
number of observations (_N) was 0, now 400

.         
.         
.         ** create beta
.         tempname BETA

.         if (`design'==1) {
.                 // sparse beta
.                 mat `BETA' = J(1,`p'+1,0)
.                 forvalues j=1(1)`s' {
  2.                         mat `BETA'[1,`j'] = 1
  3.                 }
.                 *
.                 mat `BETA'[1,`p'+1] = 1 // constant
.         }

.         else {
.                 // dense beta
.                 // with beta(j)=(delta)^j and delta<1
.                 mat `BETA' = J(1,`p'+1,0)
.                 forvalues j=1(1)`p' {
  2.                         mat `BETA'[1,`j'] = (`delta')^(`j')
  3.                 }
.                 *
.                 mat `BETA'[1,`p'+1] = 1 // constant     
.         }

.         *
.         
.         // correlation matrix
.         // theta controls the degree of correlation in X
.         tempname CORR

.         tempname cvec Cmat

.         mata: `cvec'=J(1,`p',0)

.         mata: for (i=1; i<=`p'; i++) `cvec'[1,i]=(`theta')^(i-1)

.         mata: `Cmat'=Toeplitz((`cvec')',`cvec')

.         mata: st_matrix("`CORR'",`Cmat')        

.         *
.         
.         ************* generate data ************************************************
.         // gen e
.         gen double e = rnormal()*`sigma'

.         // create x
.         drawnorm x1-x`p' , double corr(`CORR')

.         // create xb
.         gen double f = el(`BETA',1,`p'+1) // = the intercept (in last column)

.         forvalues j=1(1)`p' {
  2.                 replace f = f + x`j'*el(`BETA',1,`j')
  3.         }
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)

.         // generate y
.         gen y = f + e 

.         drop e 

.         // estimation and validation sample
.         tempvar esample vsample

.         gen `esample' = 0

.         replace `esample' = 1 if _n <= `tobs'
(200 real changes made)

.         gen `vsample' = 0 

.         replace `vsample' = 1 if _n > `tobs'
(200 real changes made)

.         
. 
.         // oracle estimator
.         reg y x1-x`s' if `esample'

      Source |       SS           df       MS      Number of obs   =       200
-------------+----------------------------------   F(20, 179)      =   1507.95
       Model |  38698.1432        20  1934.90716   Prob > F        =    0.0000
    Residual |  229.682134       179  1.28314041   R-squared       =    0.9941
-------------+----------------------------------   Adj R-squared   =    0.9934
       Total |  38927.8253       199  195.617212   Root MSE        =    1.1328

------------------------------------------------------------------------------
           y |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
          x1 |   1.048487   .1999579     5.24   0.000     .6539092    1.443065
          x2 |   .8609839   .2465545     3.49   0.001     .3744565    1.347511
          x3 |   1.018716   .2483183     4.10   0.000     .5287079    1.508723
          x4 |   1.273288   .2588413     4.92   0.000     .7625153    1.784061
          x5 |   .8921471    .241675     3.69   0.000     .4152486    1.369046
          x6 |    1.03743   .2364588     4.39   0.000     .5708247    1.504036
          x7 |   .8484028   .2340693     3.62   0.000     .3865127    1.310293
          x8 |   .8175104   .2393036     3.42   0.001     .3452914    1.289729
          x9 |   1.228743   .2572978     4.78   0.000     .7210159     1.73647
         x10 |   1.121191   .2595529     4.32   0.000     .6090144    1.633369
         x11 |   .7940298   .2788007     2.85   0.005     .2438708    1.344189
         x12 |   .9720031   .2572568     3.78   0.000     .4643569    1.479649
         x13 |   1.090281   .2537448     4.30   0.000      .589565    1.590997
         x14 |   1.249671   .2367254     5.28   0.000     .7825396    1.716803
         x15 |   .9289153   .2758118     3.37   0.001     .3846543    1.473176
         x16 |   .5608531   .2420164     2.32   0.022     .0832808    1.038425
         x17 |   1.518121   .2757205     5.51   0.000     .9740403    2.062202
         x18 |   .6722133   .2393877     2.81   0.006     .1998281    1.144598
         x19 |   1.059488   .2644401     4.01   0.000     .5376669    1.581309
         x20 |    1.15704   .1969762     5.87   0.000      .768346    1.545735
       _cons |   .8211916   .0821391    10.00   0.000     .6591061    .9832771
------------------------------------------------------------------------------

.         tempvar xb_oracle

.         predict double xb_oracle, xb

.         mat beta_oracle = e(b)

.         // add zeros to create full/large beta vector
.         mat zeros = J(1,`p'-`s',0) 

.         mat beta_oracle = (beta_oracle[1,1..`s'],zeros,beta_oracle[1,`s'+1])

.         local shat_oracle = `s'

.         ds x1-x`s'
x1   x2   x3   x4   x5   x6   x7   x8   x9   x10  x11  x12  x13  x14  x15  x16  x17  x18  x19  x20

.         local sel_oracle = r(varlist)

.         
. 
.         
. getrmse f xb_oracle, esample(`esample')
(200 missing values generated)
(200 missing values generated)

. di r(rmse_oos)
.35269445

. di r(rmse)
.34235779

. 
end of do-file

. ereturn list

scalars:
                  e(N) =  200
               e(df_m) =  20
               e(df_r) =  179
                  e(F) =  1507.946551184469
                 e(r2) =  .9940997954059482
               e(rmse) =  1.132757878424269
                e(mss) =  38698.14315304601
                e(rss) =  229.682133592673
               e(r2_a) =  .9934405546691826
                 e(ll) =  -297.6256025045256
               e(ll_0) =  -810.9024276759012
               e(rank) =  21

macros:
            e(cmdline) : "regress y x1-x20 if __000004"
              e(title) : "Linear regression"
          e(marginsok) : "XB default"
                e(vce) : "ols"
             e(depvar) : "y"
                e(cmd) : "regress"
         e(properties) : "b V"
            e(predict) : "regres_p"
          e(estat_cmd) : "regress_estat"

matrices:
                  e(b) :  1 x 21
                  e(V) :  21 x 21

functions:
             e(sample)   

. do "C:\Users\ACHIM~1.AHR\AppData\Local\Temp\STD01000000.tmp"

. local design = 1

. local sigma = 1

. local s = 20

. local p = 100

. local obs = 400

. local tobs = 200        

. local theta = .9

. local delta = .9

.         
.         
.                 drop _all

.         
.         set obs `obs'
number of observations (_N) was 0, now 400

.         
.         
.         ** create beta
.         tempname BETA

.         if (`design'==1) {
.                 // sparse beta
.                 mat `BETA' = J(1,`p'+1,0)
.                 forvalues j=1(1)`s' {
  2.                         mat `BETA'[1,`j'] = 1
  3.                 }
.                 *
.                 mat `BETA'[1,`p'+1] = 1 // constant
.         }

.         else {
.                 // dense beta
.                 // with beta(j)=(delta)^j and delta<1
.                 mat `BETA' = J(1,`p'+1,0)
.                 forvalues j=1(1)`p' {
  2.                         mat `BETA'[1,`j'] = (`delta')^(`j')
  3.                 }
.                 *
.                 mat `BETA'[1,`p'+1] = 1 // constant     
.         }

.         *
.         
.         // correlation matrix
.         // theta controls the degree of correlation in X
.         tempname CORR

.         tempname cvec Cmat

.         mata: `cvec'=J(1,`p',0)

.         mata: for (i=1; i<=`p'; i++) `cvec'[1,i]=(`theta')^(i-1)

.         mata: `Cmat'=Toeplitz((`cvec')',`cvec')

.         mata: st_matrix("`CORR'",`Cmat')        

.         *
.         
.         ************* generate data ************************************************
.         // gen e
.         gen double e = rnormal()*`sigma'

.         // create x
.         drawnorm x1-x`p' , double corr(`CORR')

.         // create xb
.         gen double f = el(`BETA',1,`p'+1) // = the intercept (in last column)

.         forvalues j=1(1)`p' {
  2.                 replace f = f + x`j'*el(`BETA',1,`j')
  3.         }
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)

.         // generate y
.         gen y = f + e 

.         drop e 

.         // estimation and validation sample
.         tempvar esample vsample

.         gen `esample' = 0

.         replace `esample' = 1 if _n <= `tobs'
(200 real changes made)

.         gen `vsample' = 0 

.         replace `vsample' = 1 if _n > `tobs'
(200 real changes made)

.         
. 
.         // oracle estimator
.         reg y x1-x`s' if `esample'

      Source |       SS           df       MS      Number of obs   =       200
-------------+----------------------------------   F(20, 179)      =   2033.37
       Model |  43769.1641        20  2188.45821   Prob > F        =    0.0000
    Residual |  192.652443       179  1.07627063   R-squared       =    0.9956
-------------+----------------------------------   Adj R-squared   =    0.9951
       Total |  43961.8166       199  220.913651   Root MSE        =    1.0374

------------------------------------------------------------------------------
           y |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
          x1 |   1.039582   .1908486     5.45   0.000     .6629789    1.416184
          x2 |   1.337203   .2375213     5.63   0.000      .868501    1.805905
          x3 |   .5243435   .2443718     2.15   0.033     .0421233    1.006564
          x4 |   1.083981   .2614573     4.15   0.000      .568046    1.599916
          x5 |   1.038539   .2532178     4.10   0.000     .5388633    1.538215
          x6 |   1.347263   .2423074     5.56   0.000     .8691169     1.82541
          x7 |   .8990003   .2415614     3.72   0.000     .4223259    1.375675
          x8 |   .6300483   .2507616     2.51   0.013     .1352192    1.124877
          x9 |   1.093081   .2573746     4.25   0.000     .5852027     1.60096
         x10 |   .9214148   .2408271     3.83   0.000     .4461894     1.39664
         x11 |   1.317499   .2291499     5.75   0.000     .8653167    1.769682
         x12 |   .6969782   .2450872     2.84   0.005     .2133464     1.18061
         x13 |   1.268986   .2510338     5.06   0.000       .77362    1.764353
         x14 |   .9279997   .2155188     4.31   0.000     .5027152    1.353284
         x15 |   .6521082   .2252958     2.89   0.004     .2075308    1.096686
         x16 |   1.181324   .2523956     4.68   0.000     .6832702    1.679377
         x17 |     .96801   .2321426     4.17   0.000     .5099217    1.426098
         x18 |   .9357499   .2466659     3.79   0.000     .4490027    1.422497
         x19 |   .7439561   .2355987     3.16   0.002      .279048    1.208864
         x20 |   1.320197   .1705533     7.74   0.000     .9836428     1.65675
       _cons |   .9606268   .0774225    12.41   0.000     .8078485    1.113405
------------------------------------------------------------------------------

.         tempvar xb_oracle

.         predict double xb_oracle, xb

.         mat beta_oracle = e(b)

.         // add zeros to create full/large beta vector
.         mat zeros = J(1,`p'-`s',0) 

.         mat beta_oracle = (beta_oracle[1,1..`s'],zeros,beta_oracle[1,`s'+1])

.         local shat_oracle = `s'

.         ds x1-x`s'
x1   x2   x3   x4   x5   x6   x7   x8   x9   x10  x11  x12  x13  x14  x15  x16  x17  x18  x19  x20

.         local sel_oracle = r(varlist)

.         
. 
. di e(rmse)
1.0374346

.         
. getrmse f xb_oracle, esample(`esample')
(200 missing values generated)
(200 missing values generated)

. di r(rmse_oos)
.36737441

. di r(rmse)
.37488772

. 
end of do-file

. do "C:\Users\ACHIM~1.AHR\AppData\Local\Temp\STD01000000.tmp"

. local design = 1

. local sigma = 1

. local s = 20

. local p = 100

. local obs = 400

. local tobs = 200        

. local theta = .9

. local delta = .9

.         
.         
.                 drop _all

.         
.         set obs `obs'
number of observations (_N) was 0, now 400

.         
.         
.         ** create beta
.         tempname BETA

.         if (`design'==1) {
.                 // sparse beta
.                 mat `BETA' = J(1,`p'+1,0)
.                 forvalues j=1(1)`s' {
  2.                         mat `BETA'[1,`j'] = 1
  3.                 }
.                 *
.                 mat `BETA'[1,`p'+1] = 1 // constant
.         }

.         else {
.                 // dense beta
.                 // with beta(j)=(delta)^j and delta<1
.                 mat `BETA' = J(1,`p'+1,0)
.                 forvalues j=1(1)`p' {
  2.                         mat `BETA'[1,`j'] = (`delta')^(`j')
  3.                 }
.                 *
.                 mat `BETA'[1,`p'+1] = 1 // constant     
.         }

.         *
.         
.         // correlation matrix
.         // theta controls the degree of correlation in X
.         tempname CORR

.         tempname cvec Cmat

.         mata: `cvec'=J(1,`p',0)

.         mata: for (i=1; i<=`p'; i++) `cvec'[1,i]=(`theta')^(i-1)

.         mata: `Cmat'=Toeplitz((`cvec')',`cvec')

.         mata: st_matrix("`CORR'",`Cmat')        

.         *
.         
.         ************* generate data ************************************************
.         // gen e
.         gen double e = rnormal()*`sigma'

.         // create x
.         drawnorm x1-x`p' , double corr(`CORR')

.         // create xb
.         gen double f = el(`BETA',1,`p'+1) // = the intercept (in last column)

.         forvalues j=1(1)`p' {
  2.                 replace f = f + x`j'*el(`BETA',1,`j')
  3.         }
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)

.         // generate y
.         gen y = f + e 

.         drop e 

.         // estimation and validation sample
.         tempvar esample vsample

.         gen `esample' = 0

.         replace `esample' = 1 if _n <= `tobs'
(200 real changes made)

.         gen `vsample' = 0 

.         replace `vsample' = 1 if _n > `tobs'
(200 real changes made)

.         
. 
.         // oracle estimator
.         reg y x1-x`s' if `esample'

      Source |       SS           df       MS      Number of obs   =       200
-------------+----------------------------------   F(20, 179)      =   2581.47
       Model |   45032.465        20  2251.62325   Prob > F        =    0.0000
    Residual |  156.128466       179  .872226067   R-squared       =    0.9965
-------------+----------------------------------   Adj R-squared   =    0.9962
       Total |  45188.5935       199  227.078359   Root MSE        =    .93393

------------------------------------------------------------------------------
           y |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
          x1 |   1.000704   .1555382     6.43   0.000     .6937797    1.307629
          x2 |   1.114081   .2156268     5.17   0.000     .6885834    1.539578
          x3 |   .7537339   .2015593     3.74   0.000     .3559959    1.151472
          x4 |   1.146397   .2173503     5.27   0.000     .7174987    1.575296
          x5 |   1.046932   .2069539     5.06   0.000      .638549    1.455316
          x6 |   1.108176   .2012091     5.51   0.000     .7111287    1.505223
          x7 |   .8228997   .2149321     3.83   0.000      .398773    1.247026
          x8 |   .8768289   .2230889     3.93   0.000     .4366065    1.317051
          x9 |   1.100815   .2198644     5.01   0.000     .6669556    1.534675
         x10 |   1.000871   .2157016     4.64   0.000     .5752254    1.426516
         x11 |   .8380458   .2232194     3.75   0.000     .3975656    1.278526
         x12 |   1.288802    .199978     6.44   0.000     .8941842    1.683419
         x13 |   .8597232   .2408345     3.57   0.000     .3844832    1.334963
         x14 |   1.092384    .231118     4.73   0.000     .6363176     1.54845
         x15 |   .8190223    .211961     3.86   0.000     .4007584    1.237286
         x16 |   1.134895   .2131592     5.32   0.000     .7142666    1.555523
         x17 |   1.126936   .2072023     5.44   0.000     .7180629     1.53581
         x18 |   1.242213   .2299735     5.40   0.000     .7884053    1.696021
         x19 |   .6874437    .208278     3.30   0.001     .2764476     1.09844
         x20 |   .9214619   .1523495     6.05   0.000     .6208297    1.222094
       _cons |   .9976221    .070834    14.08   0.000     .8578449    1.137399
------------------------------------------------------------------------------

.         tempvar xb_oracle

.         predict double xb_oracle, xb

.         mat beta_oracle = e(b)

.         // add zeros to create full/large beta vector
.         mat zeros = J(1,`p'-`s',0) 

.         mat beta_oracle = (beta_oracle[1,1..`s'],zeros,beta_oracle[1,`s'+1])

.         local shat_oracle = `s'

.         ds x1-x`s'
x1   x2   x3   x4   x5   x6   x7   x8   x9   x10  x11  x12  x13  x14  x15  x16  x17  x18  x19  x20

.         local sel_oracle = r(varlist)

.         
. 
. di e(rmse)
.93393044

.         
. getrmse y xb_oracle, esample(`esample')
(200 missing values generated)
(200 missing values generated)

. di r(rmse_oos)
1.0860348

. di r(rmse)
.88353966

. 
end of do-file

. do "C:\Users\ACHIM~1.AHR\AppData\Local\Temp\STD01000000.tmp"

. local design = 1

. local sigma = 1

. local s = 20

. local p = 100

. local obs = 400

. local tobs = 200        

. local theta = .9

. local delta = .9

.         
.         
.                 drop _all

.         
.         set obs `obs'
number of observations (_N) was 0, now 400

.         
.         
.         ** create beta
.         tempname BETA

.         if (`design'==1) {
.                 // sparse beta
.                 mat `BETA' = J(1,`p'+1,0)
.                 forvalues j=1(1)`s' {
  2.                         mat `BETA'[1,`j'] = 1
  3.                 }
.                 *
.                 mat `BETA'[1,`p'+1] = 1 // constant
.         }

.         else {
.                 // dense beta
.                 // with beta(j)=(delta)^j and delta<1
.                 mat `BETA' = J(1,`p'+1,0)
.                 forvalues j=1(1)`p' {
  2.                         mat `BETA'[1,`j'] = (`delta')^(`j')
  3.                 }
.                 *
.                 mat `BETA'[1,`p'+1] = 1 // constant     
.         }

.         *
.         
.         // correlation matrix
.         // theta controls the degree of correlation in X
.         tempname CORR

.         tempname cvec Cmat

.         mata: `cvec'=J(1,`p',0)

.         mata: for (i=1; i<=`p'; i++) `cvec'[1,i]=(`theta')^(i-1)

.         mata: `Cmat'=Toeplitz((`cvec')',`cvec')

.         mata: st_matrix("`CORR'",`Cmat')        

.         *
.         
.         ************* generate data ************************************************
.         // gen e
.         gen double e = rnormal()*`sigma'

.         // create x
.         drawnorm x1-x`p' , double corr(`CORR')

.         // create xb
.         gen double f = el(`BETA',1,`p'+1) // = the intercept (in last column)

.         forvalues j=1(1)`p' {
  2.                 replace f = f + x`j'*el(`BETA',1,`j')
  3.         }
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)

.         // generate y
.         gen y = f + e 

.         drop e 

.         // estimation and validation sample
.         tempvar esample vsample

.         gen `esample' = 0

.         replace `esample' = 1 if _n <= `tobs'
(200 real changes made)

.         gen `vsample' = 0 

.         replace `vsample' = 1 if _n > `tobs'
(200 real changes made)

.         
. 
.         // oracle estimator
.         reg y x1-x`s' if `esample'

      Source |       SS           df       MS      Number of obs   =       200
-------------+----------------------------------   F(20, 179)      =   1875.05
       Model |  39870.9078        20  1993.54539   Prob > F        =    0.0000
    Residual |  190.311771       179  1.06319425   R-squared       =    0.9952
-------------+----------------------------------   Adj R-squared   =    0.9947
       Total |  40061.2196       199  201.312661   Root MSE        =    1.0311

------------------------------------------------------------------------------
           y |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
          x1 |   1.061547    .192396     5.52   0.000     .6818908    1.441203
          x2 |    .945665   .2337063     4.05   0.000     .4844911    1.406839
          x3 |   .8812268   .2588624     3.40   0.001     .3704123    1.392041
          x4 |   1.171562   .2469059     4.74   0.000     .6843412    1.658783
          x5 |   1.079138   .2324492     4.64   0.000     .6204449    1.537831
          x6 |   .9253993   .2196139     4.21   0.000      .492034    1.358765
          x7 |   1.277865   .2218482     5.76   0.000     .8400908    1.715639
          x8 |   .6075854   .2390478     2.54   0.012     .1358711      1.0793
          x9 |   1.570515   .2516542     6.24   0.000     1.073924    2.067105
         x10 |   .6990612   .2515832     2.78   0.006     .2026107    1.195512
         x11 |   1.052421   .2370069     4.44   0.000      .584734    1.520108
         x12 |   .7359646   .2363611     3.11   0.002     .2695519    1.202377
         x13 |   1.269411   .2446393     5.19   0.000     .7866626    1.752159
         x14 |   .8094969   .2464489     3.28   0.001      .323178    1.295816
         x15 |   .6555223   .2442549     2.68   0.008     .1735329    1.137512
         x16 |   1.102727   .2349469     4.69   0.000     .6391048    1.566349
         x17 |   .8245676   .2184261     3.78   0.000     .3935461    1.255589
         x18 |   1.248551   .2177023     5.74   0.000      .818958    1.678144
         x19 |   1.009916   .2307984     4.38   0.000     .5544803    1.465352
         x20 |   1.134663   .1608732     7.05   0.000     .8172115    1.452115
       _cons |   1.141756   .0758927    15.04   0.000     .9919966    1.291516
------------------------------------------------------------------------------

.         tempvar xb_oracle

.         predict double xb_oracle, xb

.         mat beta_oracle = e(b)

.         // add zeros to create full/large beta vector
.         mat zeros = J(1,`p'-`s',0) 

.         mat beta_oracle = (beta_oracle[1,1..`s'],zeros,beta_oracle[1,`s'+1])

.         local shat_oracle = `s'

.         ds x1-x`s'
x1   x2   x3   x4   x5   x6   x7   x8   x9   x10  x11  x12  x13  x14  x15  x16  x17  x18  x19  x20

.         local sel_oracle = r(varlist)

.         
. 
. di e(rmse)
1.0311131

.         
. getrmse y xb_oracle, esample(`esample')
(200 missing values generated)
(200 missing values generated)

. di r(rmse_oos)
1.0520232

. di r(rmse)
.97547878

. 
end of do-file

. do "C:\Users\ACHIM~1.AHR\AppData\Local\Temp\STD01000000.tmp"

. local design = 1

. local sigma = 1

. local s = 20

. local p = 100

. local obs = 400

. local tobs = 200        

. local theta = .9

. local delta = .9

.         
.         
.                 drop _all

.         
.         set obs `obs'
number of observations (_N) was 0, now 400

.         
.         
.         ** create beta
.         tempname BETA

.         if (`design'==1) {
.                 // sparse beta
.                 mat `BETA' = J(1,`p'+1,0)
.                 forvalues j=1(1)`s' {
  2.                         mat `BETA'[1,`j'] = 1
  3.                 }
.                 *
.                 mat `BETA'[1,`p'+1] = 1 // constant
.         }

.         else {
.                 // dense beta
.                 // with beta(j)=(delta)^j and delta<1
.                 mat `BETA' = J(1,`p'+1,0)
.                 forvalues j=1(1)`p' {
  2.                         mat `BETA'[1,`j'] = (`delta')^(`j')
  3.                 }
.                 *
.                 mat `BETA'[1,`p'+1] = 1 // constant     
.         }

.         *
.         
.         // correlation matrix
.         // theta controls the degree of correlation in X
.         tempname CORR

.         tempname cvec Cmat

.         mata: `cvec'=J(1,`p',0)

.         mata: for (i=1; i<=`p'; i++) `cvec'[1,i]=(`theta')^(i-1)

.         mata: `Cmat'=Toeplitz((`cvec')',`cvec')

.         mata: st_matrix("`CORR'",`Cmat')        

.         *
.         
.         ************* generate data ************************************************
.         // gen e
.         gen double e = rnormal()*`sigma'

.         // create x
.         drawnorm x1-x`p' , double corr(`CORR')

.         // create xb
.         gen double f = el(`BETA',1,`p'+1) // = the intercept (in last column)

.         forvalues j=1(1)`p' {
  2.                 replace f = f + x`j'*el(`BETA',1,`j')
  3.         }
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)

.         // generate y
.         gen y = f + e 

.         drop e 

.         // estimation and validation sample
.         tempvar esample vsample

.         gen `esample' = 0

.         replace `esample' = 1 if _n <= `tobs'
(200 real changes made)

.         gen `vsample' = 0 

.         replace `vsample' = 1 if _n > `tobs'
(200 real changes made)

.         
. 
.         // oracle estimator
.         reg y x1-x`s' if `esample'

      Source |       SS           df       MS      Number of obs   =       200
-------------+----------------------------------   F(20, 179)      =   2532.98
       Model |  41060.4724        20  2053.02362   Prob > F        =    0.0000
    Residual |  145.082499       179  .810516753   R-squared       =    0.9965
-------------+----------------------------------   Adj R-squared   =    0.9961
       Total |  41205.5549       199   207.06309   Root MSE        =    .90029

------------------------------------------------------------------------------
           y |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
          x1 |    .706603   .1520447     4.65   0.000     .4065724    1.006634
          x2 |   1.758422   .2091046     8.41   0.000     1.345795     2.17105
          x3 |    .384547   .2397788     1.60   0.111    -.0886099    .8577038
          x4 |   .9703693   .2117292     4.58   0.000      .552563    1.388176
          x5 |   .8820448   .2107225     4.19   0.000     .4662249    1.297865
          x6 |   1.349518   .2050059     6.58   0.000      .944979    1.754058
          x7 |    .992122   .2072158     4.79   0.000      .583222    1.401022
          x8 |   .9725398   .2172932     4.48   0.000      .543754    1.401326
          x9 |   .8676482   .2022433     4.29   0.000     .4685603    1.266736
         x10 |   .9141214   .1848156     4.95   0.000     .5494237    1.278819
         x11 |   1.324688   .2026913     6.54   0.000     .9247159     1.72466
         x12 |   .7419672   .2159938     3.44   0.001     .3157454    1.168189
         x13 |   1.304602   .2125602     6.14   0.000     .8851563    1.724049
         x14 |   .6725713   .2116866     3.18   0.002     .2548489    1.090294
         x15 |   1.050487   .2049942     5.12   0.000     .6459707    1.455003
         x16 |   1.317098   .2125252     6.20   0.000      .897721    1.736475
         x17 |   .8569805   .2168276     3.95   0.000     .4291134    1.284848
         x18 |   .5299599   .2049592     2.59   0.011     .1255129    .9344069
         x19 |   1.313332   .2087547     6.29   0.000     .9013955    1.725269
         x20 |   1.113725   .1607706     6.93   0.000     .7964759    1.430975
       _cons |   .9384935   .0657421    14.28   0.000     .8087642    1.068223
------------------------------------------------------------------------------

.         tempvar xb_oracle

.         predict double xb_oracle, xb

.         mat beta_oracle = e(b)

.         // add zeros to create full/large beta vector
.         mat zeros = J(1,`p'-`s',0) 

.         mat beta_oracle = (beta_oracle[1,1..`s'],zeros,beta_oracle[1,`s'+1])

.         local shat_oracle = `s'

.         ds x1-x`s'
x1   x2   x3   x4   x5   x6   x7   x8   x9   x10  x11  x12  x13  x14  x15  x16  x17  x18  x19  x20

.         local sel_oracle = r(varlist)

.         
. 
. di e(rmse)*200/180
1.0003189

.         
. getrmse y xb_oracle, esample(`esample')
(200 missing values generated)
(200 missing values generated)

. di r(rmse_oos)
1.0704038

. di r(rmse)
.85171151

. 
end of do-file

. do "C:\Users\ACHIM~1.AHR\AppData\Local\Temp\STD01000000.tmp"

. local design = 1

. local sigma = 1

. local s = 20

. local p = 100

. local obs = 400

. local tobs = 200        

. local theta = .9

. local delta = .9

.         
.         
.                 drop _all

.         
.         set obs `obs'
number of observations (_N) was 0, now 400

.         
.         
.         ** create beta
.         tempname BETA

.         if (`design'==1) {
.                 // sparse beta
.                 mat `BETA' = J(1,`p'+1,0)
.                 forvalues j=1(1)`s' {
  2.                         mat `BETA'[1,`j'] = 1
  3.                 }
.                 *
.                 mat `BETA'[1,`p'+1] = 1 // constant
.         }

.         else {
.                 // dense beta
.                 // with beta(j)=(delta)^j and delta<1
.                 mat `BETA' = J(1,`p'+1,0)
.                 forvalues j=1(1)`p' {
  2.                         mat `BETA'[1,`j'] = (`delta')^(`j')
  3.                 }
.                 *
.                 mat `BETA'[1,`p'+1] = 1 // constant     
.         }

.         *
.         
.         // correlation matrix
.         // theta controls the degree of correlation in X
.         tempname CORR

.         tempname cvec Cmat

.         mata: `cvec'=J(1,`p',0)

.         mata: for (i=1; i<=`p'; i++) `cvec'[1,i]=(`theta')^(i-1)

.         mata: `Cmat'=Toeplitz((`cvec')',`cvec')

.         mata: st_matrix("`CORR'",`Cmat')        

.         *
.         
.         ************* generate data ************************************************
.         // gen e
.         gen double e = rnormal()*`sigma'

.         // create x
.         drawnorm x1-x`p' , double corr(`CORR')

.         // create xb
.         gen double f = el(`BETA',1,`p'+1) // = the intercept (in last column)

.         forvalues j=1(1)`p' {
  2.                 replace f = f + x`j'*el(`BETA',1,`j')
  3.         }
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)

.         // generate y
.         gen y = f + e 

.         drop e 

.         // estimation and validation sample
.         tempvar esample vsample

.         gen `esample' = 0

.         replace `esample' = 1 if _n <= `tobs'
(200 real changes made)

.         gen `vsample' = 0 

.         replace `vsample' = 1 if _n > `tobs'
(200 real changes made)

.         
. 
.         // oracle estimator
.         reg y x1-x`s' if `esample'

      Source |       SS           df       MS      Number of obs   =       200
-------------+----------------------------------   F(20, 179)      =   2132.47
       Model |  43276.4998        20  2163.82499   Prob > F        =    0.0000
    Residual |  181.631588       179  1.01470161   R-squared       =    0.9958
-------------+----------------------------------   Adj R-squared   =    0.9954
       Total |  43458.1314       199   218.38257   Root MSE        =    1.0073

------------------------------------------------------------------------------
           y |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
          x1 |   1.009838   .1665103     6.06   0.000     .6812627    1.338414
          x2 |   .5862628   .2386846     2.46   0.015     .1152651     1.05726
          x3 |   .9435223   .2227106     4.24   0.000     .5040462    1.382998
          x4 |   1.317808   .2182857     6.04   0.000     .8870638    1.748553
          x5 |   .9037222   .2307267     3.92   0.000     .4484278    1.359017
          x6 |   1.140765   .2211062     5.16   0.000     .7044547    1.577075
          x7 |   .7872174   .2121253     3.71   0.000     .3686293    1.205805
          x8 |   1.237211   .2215327     5.58   0.000     .8000591    1.674362
          x9 |   .9907384   .2220118     4.46   0.000     .5526413    1.428835
         x10 |   1.149668   .2556237     4.50   0.000     .6452439    1.654091
         x11 |   .8554232   .2526525     3.39   0.001     .3568626    1.353984
         x12 |   1.013971   .2207512     4.59   0.000     .5783609     1.44958
         x13 |   .9315494   .2285209     4.08   0.000     .4806079    1.382491
         x14 |   .9867266   .2302071     4.29   0.000     .5324576    1.440996
         x15 |   .8164047   .2412959     3.38   0.001      .340254    1.292555
         x16 |   1.195046   .2254488     5.30   0.000     .7501671    1.639926
         x17 |   .8181117   .2130225     3.84   0.000     .3977532     1.23847
         x18 |    1.34784   .2264078     5.95   0.000     .9010679    1.794611
         x19 |   .7295353   .2436854     2.99   0.003     .2486696    1.210401
         x20 |   1.153498   .1856851     6.21   0.000      .787085    1.519912
       _cons |    .977473   .0757262    12.91   0.000      .828042    1.126904
------------------------------------------------------------------------------

.         tempvar xb_oracle

.         predict double xb_oracle, xb

.         mat beta_oracle = e(b)

.         // add zeros to create full/large beta vector
.         mat zeros = J(1,`p'-`s',0) 

.         mat beta_oracle = (beta_oracle[1,1..`s'],zeros,beta_oracle[1,`s'+1])

.         local shat_oracle = `s'

.         ds x1-x`s'
x1   x2   x3   x4   x5   x6   x7   x8   x9   x10  x11  x12  x13  x14  x15  x16  x17  x18  x19  x20

.         local sel_oracle = r(varlist)

.         
. 
. di e(rmse)*sqrt(180/200)
.95563144

.         
. getrmse y xb_oracle, esample(`esample')
(200 missing values generated)
(200 missing values generated)

. di r(rmse_oos)
.98788037

. di r(rmse)
.95297321

. 
end of do-file

. ereturn list

scalars:
                  e(N) =  200
               e(df_m) =  20
               e(df_r) =  179
                  e(F) =  2132.474191286843
                 e(r2) =  .9958205384825593
               e(rmse) =  1.007323983503281
                e(mss) =  43276.49980729548
                e(rss) =  181.6315877856243
               e(r2_a) =  .9953535595420631
                 e(ll) =  -274.1540092453219
               e(ll_0) =  -821.9112956775934
               e(rank) =  21

macros:
            e(cmdline) : "regress y x1-x20 if __000004"
              e(title) : "Linear regression"
          e(marginsok) : "XB default"
                e(vce) : "ols"
             e(depvar) : "y"
                e(cmd) : "regress"
         e(properties) : "b V"
            e(predict) : "regres_p"
          e(estat_cmd) : "regress_estat"

matrices:
                  e(b) :  1 x 21
                  e(V) :  21 x 21

functions:
             e(sample)   

. do "C:\Users\ACHIM~1.AHR\AppData\Local\Temp\STD01000000.tmp"

. local design = 1

. local sigma = 1

. local s = 20

. local p = 100

. local obs = 400

. local tobs = 200        

. local theta = .9

. local delta = .9

.         
.         
.                 drop _all

.         
.         set obs `obs'
number of observations (_N) was 0, now 400

.         
.         
.         ** create beta
.         tempname BETA

.         if (`design'==1) {
.                 // sparse beta
.                 mat `BETA' = J(1,`p'+1,0)
.                 forvalues j=1(1)`s' {
  2.                         mat `BETA'[1,`j'] = 1
  3.                 }
.                 *
.                 mat `BETA'[1,`p'+1] = 1 // constant
.         }

.         else {
.                 // dense beta
.                 // with beta(j)=(delta)^j and delta<1
.                 mat `BETA' = J(1,`p'+1,0)
.                 forvalues j=1(1)`p' {
  2.                         mat `BETA'[1,`j'] = (`delta')^(`j')
  3.                 }
.                 *
.                 mat `BETA'[1,`p'+1] = 1 // constant     
.         }

.         *
.         
.         // correlation matrix
.         // theta controls the degree of correlation in X
.         tempname CORR

.         tempname cvec Cmat

.         mata: `cvec'=J(1,`p',0)

.         mata: for (i=1; i<=`p'; i++) `cvec'[1,i]=(`theta')^(i-1)

.         mata: `Cmat'=Toeplitz((`cvec')',`cvec')

.         mata: st_matrix("`CORR'",`Cmat')        

.         *
.         
.         ************* generate data ************************************************
.         // gen e
.         gen double e = rnormal()*`sigma'

.         // create x
.         drawnorm x1-x`p' , double corr(`CORR')

.         // create xb
.         gen double f = el(`BETA',1,`p'+1) // = the intercept (in last column)

.         forvalues j=1(1)`p' {
  2.                 replace f = f + x`j'*el(`BETA',1,`j')
  3.         }
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(400 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)

.         // generate y
.         gen y = f + e 

.         drop e 

.         // estimation and validation sample
.         tempvar esample vsample

.         gen `esample' = 0

.         replace `esample' = 1 if _n <= `tobs'
(200 real changes made)

.         gen `vsample' = 0 

.         replace `vsample' = 1 if _n > `tobs'
(200 real changes made)

.         
. 
.         // oracle estimator
.         reg y x1-x`s' if `esample'

      Source |       SS           df       MS      Number of obs   =       200
-------------+----------------------------------   F(20, 179)      =   2219.33
       Model |  47486.3326        20  2374.31663   Prob > F        =    0.0000
    Residual |  191.500286       179    1.069834   R-squared       =    0.9960
-------------+----------------------------------   Adj R-squared   =    0.9955
       Total |  47677.8328       199    239.5871   Root MSE        =    1.0343

------------------------------------------------------------------------------
           y |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
          x1 |   .8773425   .1696135     5.17   0.000     .5426432    1.212042
          x2 |   1.025811     .24249     4.23   0.000     .5473044    1.504318
          x3 |   1.072588   .2463903     4.35   0.000     .5863851    1.558792
          x4 |   .9017573    .249299     3.62   0.000     .4098142      1.3937
          x5 |    1.00293   .2286272     4.39   0.000     .5517792    1.454082
          x6 |   .8471074   .2264913     3.74   0.000     .4001709    1.294044
          x7 |   1.204992    .246408     4.89   0.000     .7187536     1.69123
          x8 |   .9473978   .2295603     4.13   0.000     .4944052     1.40039
          x9 |   1.238376   .2603602     4.76   0.000     .7246056    1.752146
         x10 |   1.156406   .2348585     4.92   0.000     .6929588    1.619854
         x11 |    .539722   .2358965     2.29   0.023     .0742262    1.005218
         x12 |   1.187284   .2268548     5.23   0.000     .7396303    1.634938
         x13 |   .8826833   .2357185     3.74   0.000     .4175386    1.347828
         x14 |   1.043007   .2355547     4.43   0.000     .5781859    1.507829
         x15 |   1.130945   .2467131     4.58   0.000     .6441045    1.617785
         x16 |   .8826354   .2400704     3.68   0.000     .4089031    1.356368
         x17 |   .8525719    .259515     3.29   0.001     .3404697    1.364674
         x18 |   1.041734   .2414147     4.32   0.000     .5653493    1.518119
         x19 |    1.34621   .2386748     5.64   0.000     .8752315    1.817188
         x20 |   .7593347   .1696696     4.48   0.000     .4245247    1.094145
       _cons |   1.029965   .0784515    13.13   0.000     .8751558    1.184773
------------------------------------------------------------------------------

.         tempvar xb_oracle

.         predict double xb_oracle, xb

.         mat beta_oracle = e(b)

.         // add zeros to create full/large beta vector
.         mat zeros = J(1,`p'-`s',0) 

.         mat beta_oracle = (beta_oracle[1,1..`s'],zeros,beta_oracle[1,`s'+1])

.         local shat_oracle = `s'

.         ds x1-x`s'
x1   x2   x3   x4   x5   x6   x7   x8   x9   x10  x11  x12  x13  x14  x15  x16  x17  x18  x19  x20

.         local sel_oracle = r(varlist)

.         
. 
. di e(rmse)*sqrt(179/200)
.97852002

.         
. getrmse y xb_oracle, esample(`esample')
(200 missing values generated)
(200 missing values generated)

. di r(rmse_oos)
1.074131

. di r(rmse)
.97852002

. 
end of do-file

. di 1^(-3)
1

. di 1^(-4)
1

. di (-1)^(4)
1

. di (-1)^(5)
-1

. help integer

. help syntax

. help integer

. findit ingeteger

. findit integer

. di `negative'


. do "C:\Users\ACHIM~1.AHR\AppData\Local\Temp\STD01000000.tmp"

. * aa 
. * date of last run started: 26sep2018
. clear

. cap cd "C:\Users\Achim.Ahrens\Dropbox\statalasso\Lassopack_MC"

. cap cd "C:\Users\Achim.Ahrens\Lassopack_MC"

. 
. cap log close
